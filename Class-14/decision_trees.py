# -*- coding: utf-8 -*-
"""Decision_Trees.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1VD4uGvaRzP2xRy4u3vtI2ZJryLv19KMG

**Importing The Libraries**
"""

import matplotlib.pyplot as plt
import seaborn as sns
import numpy as np
import pandas as pd
import os

"""**Loading The Dataset**"""

'''kaggle link for dataset:

https://www.kaggle.com/datasets/uciml/red-wine-quality-cortez-et-al-2009

DO NOT RUN'''

dataset = pd.read_csv('/content/winequality-red.csv')
dataset

"""**Describing The Data**"""

# To check for missing values
dataset.isnull().sum()

# To check number of rows and columns
dataset.shape

dataset.describe()

"""**Separating Dependant (y) From Independant Values (x)**"""

x = dataset.iloc[:, :-1].values
x

y = dataset.iloc[:, -1].values
y

"""**Training and Testing Split**"""

from sklearn.model_selection import train_test_split,cross_validate
x_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.20, random_state=42)

"""**Applying Decision Tree Algorithm**"""

from sklearn.tree import DecisionTreeClassifier
clf = DecisionTreeClassifier()
clf = clf.fit(x_train, y_train)

# Making predictions
pred = clf.predict(x_test)
pred

# Actual values for comparison
y_test

"""**Measuring Performances**"""

from sklearn.metrics import accuracy_score
accuracy = accuracy_score(y_test, pred)
print("The Model Accuracy is", accuracy)

from sklearn.metrics import precision_score
PS = precision_score(y_test, pred, average='weighted')
print("The Model Precision Score is", PS)

from sklearn.metrics import f1_score
f1 = f1_score(y_test, pred, average='weighted')
print("The Model Accuracy is", f1)

from sklearn.metrics import recall_score
recall = recall_score(y_test, pred, average='weighted')
print("The Model Recall is", recall)

from scipy.sparse.data import matrix
from sklearn.metrics import confusion_matrix, ConfusionMatrixDisplay
confusion_matrix(y_test, pred)